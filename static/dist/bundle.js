var e,t;const ScrollTo={top(a){window.scroll({top:0,left:0,behavior:"smooth"})},checkScroll(a){let s=document.getElementById("scrollToTopBtn");window.scrollY>0?s.style.display="block":s.style.display="none"}};$(a=>{lazyload(),Apis.checkApi(),ScrollTo.checkScroll(),$("#tabApis").on("click",Apis.apis),$("#tabPins").on("click",Apis.pinned),$("#tabCrates").on("click",Apis.crates),$(window).on("scroll",ScrollTo.checkScroll),$("#scrollToTopBtn").on("click",ScrollTo.top),$("#postDownloadPdfBtn").on("click",Apis.downloadPdf),$("#postTagsBtn").on("click",function(){$(this).toggleClass("actived"),$("#postFlesBtn").removeClass("actived"),$("#postFilesBox").hide(),$("#postTagsBox").slideToggle(250)}),$("#postShareBtn").on("click",function(){$(this).toggleClass("actived"),$("#postShareBox").slideToggle(250)}),$("#postFilesBtn").on("click",function(){$(this).toggleClass("actived"),$("#postTagsBtn").removeClass("actived"),$("#postTagsBox").hide(),$("#postFilesBox").slideToggle(250)}),$(".featured-search").on("input",function(){var a=$(this).val().toLowerCase();$(".featured-body > .featured-item").each(function(){$(this).text().toLowerCase().includes(a)?$(this).show():$(this).hide()})}),$("#postShareBoxInput").on("click",function(){$(this).focus(),$(this).select();let a=$(this).val();navigator.clipboard.writeText(a)})});const Mermaid=void(a=>{mermaid.initialize({theme:"dark",securityLevel:"loose"});let s=document.querySelectorAll(".language-mermaid");s.forEach(a=>{a.classList.remove("language-mermaid"),a.classList.add("diagram-mermaid")}),s.forEach(a=>{let s=document.createElement("div");s.classList.add("mermaid"),s.textContent=a.textContent,a.textContent="",a.appendChild(s),mermaid.init(void 0,s)})})(),Apis=(a=>{let s=232087,o="kremilly",i="https://api.kremilly.com",l=a=>a>=1e3?a/1e3+"k":a.toString(),c=a=>{fetch("https://gist.githubusercontent.com/kremilly/0e2b5ac9779857efcf0e3fd6f62cd093/raw/112c3af99ed5db18776192609215353a18c28e9d/languages-hex-colors.json",{method:"GET",cache:"default"}).then(a=>a.json()).then(s=>{_.forEach(s,(s,o)=>{$(a).attr("data-lang").toLowerCase()==o&&$(a).css("color",s)})})},r=(a=!1)=>{"/"==window.location.pathname&&fetch(`${i}/github?user=${o}`,{method:"GET",cache:"default"}).then(a=>a.json()).then(s=>{a||(window.location.hash="pins"),$(".featured-tabs").removeClass("actived"),$("#tabPins").toggleClass("actived"),$("#featuredList").empty(),s.forEach(a=>{$("#featuredList").append(`
                        <a href='${a.url}' target='_blank' class='item featured-item'>
                            <div class='name'>${a.name}</div>
                            <div class='info'>${a.description}</div>

                            <div class='footer'>
                                <div class='lang lc-${a.name}' data-lang='${a.languages[0]}'>
                                    ${a.languages[0]}
                                </div>

                                <div class='stats'>
                                    <div class='fas fa-star'></div>${l(a.stars)} stars 
                                    <div class='fas fa-code-fork'></div> ${l(a.forks)} forks
                                </div>
                            </div>
                        </a>
                    `),c(`.lc-${a.name}`)}),$("#featured").show()})},n=a=>{"/"==window.location.pathname&&fetch(`${i}`).then(a=>a.json()).then(a=>{window.location.hash="apis",$(".featured-tabs").removeClass("actived"),$("#tabApis").toggleClass("actived"),$("#featuredList").empty(),a.list.forEach(a=>{let s=a.name.charAt(0).toUpperCase()+a.name.slice(1);$("#featuredList").append(`
                        <a href='${a.wiki}' target='_blank' class='item featured-item'>
                            <div class='name'>${s}</div>
                        </a>
                    `)}),$("#featured").show()})},d=a=>{"/"==window.location.pathname&&fetch(`https://crates.io/api/v1/crates?user_id=${s}`).then(a=>a.json()).then(a=>{window.location.hash="crates",$(".featured-tabs").removeClass("actived"),$("#tabCrates").toggleClass("actived"),$("#featuredList").empty(),a.crates.forEach(a=>{let s=a.name.charAt(0).toUpperCase()+a.name.slice(1);$("#featuredList").append(`
                        <a href='https://crates.io/crates/${a.name}' target='_blank' class='item featured-item'>
                            <div class='name'>${s}</div>
                            <div class='info'>${a.description}</div>
                            <div class='footer'>${l(a.downloads)} downloads \xe2â‚\xac\xa2 ${a.newest_version}</div>
                        </a>
                    `)}),$("#featured").show()})},h=a=>{if("/"==window.location.pathname)switch(window.location.hash?$("#featured").addClass("featured-caller"):$("#featured").removeClass("featured-caller"),window.location.hash){case"#apis":n();break;case"#pins":r();break;case"#crates":d();break;default:r(!0)}},p=a=>{fetch(`${window.location.href.replace(window.location.hash,"")+"/export"}`).then(a=>{if(!a.ok)throw Error("Network response was not ok");return a.url}).then(a=>{let s=document.createElement("a");s.href=a,s.download="arquivo.pdf",document.body.appendChild(s),s.click(),document.body.removeChild(s)}).catch(a=>{console.error("There was an error with the fetch operation:",a)})};return{apiUri:i,apis:()=>n(),crates:()=>d(),pinned:()=>r(),checkApi:()=>h(),colors:a=>c(a),downloadPdf:()=>p()}})();